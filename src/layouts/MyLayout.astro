--- 
import '../styles/global.css' 
import Nav from '@/components/Nav'; 
import '@fontsource-variable/archivo';
import MovingFooter from '@/components/MovingFooter';

interface Props {
    title: string;
    description?: string; // Make description optional
}

const { title, description } = Astro.props;
---

<script is:inline>
  function getStoredTheme() {
    return localStorage.getItem('theme') || 'light';
  }

  function setTheme(theme) {
    document.documentElement.classList.toggle('dark', theme === 'dark');
    localStorage.setItem('theme', theme);
  }

  // Set the initial theme
  setTheme(getStoredTheme());

  // Listen for theme changes
  document.addEventListener('themeChanged', (e) => {
    setTheme(e.detail.theme);
  });
</script>

<!DOCTYPE html>
<html lang="en" class="h-full">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{title}</title>
		{description && <meta name="description" content={description} />}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	</head>
	<body class="bg-bg dark:bg-darkBg text-text dark:text-darkText flex flex-col min-h-screen">
		<header class="relative">
			<Nav client:load /> 
		</header>
		<main class="max-w-7xl mx-auto p-4 flex-grow">
			<slot />
		</main>
		<footer class="mt-auto">
			<MovingFooter client:load /> 
		</footer>
	</body>
</html>